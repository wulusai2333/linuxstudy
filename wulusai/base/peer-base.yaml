# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

version: '2'

services:
  peer-base:
    image: hyperledger/fabric-peer:latest #用latest就好
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
     #当前节点属于哪个网络
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=wulusai_byfn #${COMPOSE_PROJECT_NAME}改为当前目录名
      - FABRIC_LOGGING_SPEC=INFO
      #- FABRIC_LOGGING_SPEC=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true #是不是自动选举leader节点  锚节点是组织之间通信的节点,leader节点是组织与orderer通信的节点
      - CORE_PEER_GOSSIP_ORGLEADER=false #当前节点是不是leader节点 上面是开启自动选举,两个不能都为true
      - CORE_PEER_PROFILE_ENABLED=true #在peer节点中有profile服务
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start

  orderer-base:
    image: hyperledger/fabric-orderer:latest
    environment:
      - FABRIC_LOGGING_SPEC=INFO
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0 #orderer节点的监听地址
      - ORDERER_GENERAL_GENESISMETHOD=file #创世块的来源 , file就是在文件
      - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block #创世块对应的文件,不用改
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP #orderer节点所属组的id
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp #当前节点的msp路径
      # enabled TLS
      - ORDERER_GENERAL_TLS_ENABLED=true #是否使用tls加密
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      #- ORDERER_KAFKA_TOPIC_REPLICATIONFACTOR=1
      #- ORDERER_KAFKA_VERBOSE=true
      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/var/hyperledger/orderer/tls/server.crt #证书
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/var/hyperledger/orderer/tls/server.key #私钥
      - ORDERER_GENERAL_CLUSTER_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt] #根证书
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: orderer

